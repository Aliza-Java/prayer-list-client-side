{"ast":null,"code":"import { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../admin.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../auth/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../../shared/loading-spinner/loading-spinner.component\";\nfunction AdminSettingsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminSettingsComponent_div_2_span_8_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Admin Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminSettingsComponent_div_2_span_8_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please enter a valid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminSettingsComponent_div_2_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtemplate(1, AdminSettingsComponent_div_2_span_8_span_1_Template, 2, 0, \"span\", 2);\n    i0.ɵɵtemplate(2, AdminSettingsComponent_div_2_span_8_span_2_Template, 2, 0, \"span\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settingsForm.get(\"email\").errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settingsForm.get(\"email\").errors[\"email\"]);\n  }\n}\nfunction AdminSettingsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function AdminSettingsComponent_div_2_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSubmit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 5)(3, \"div\", 6)(4, \"span\");\n    i0.ɵɵtext(5, \"* Admin's email \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminSettingsComponent_div_2_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.settings.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵtemplate(8, AdminSettingsComponent_div_2_span_8_Template, 3, 2, \"span\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 10)(10, \"div\", 11)(11, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminSettingsComponent_div_2_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.settings.newNamePrompt = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"label\", 13);\n    i0.ɵɵtext(13, \"Receive new name notifications\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"div\", 10)(15, \"div\", 6)(16, \"span\", 14);\n    i0.ɵɵtext(17, \"How many days should we wait before deleting a name?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminSettingsComponent_div_2_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.settings.waitBeforeDeletion = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"div\", 16);\n    i0.ɵɵelement(20, \"div\", 8);\n    i0.ɵɵelementStart(21, \"div\", 17)(22, \"button\", 18);\n    i0.ɵɵtext(23, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function AdminSettingsComponent_div_2_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onCancel());\n    });\n    i0.ɵɵtext(25, \"Cancel\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.settingsForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.settings.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.settingsForm.get(\"email\").touched && !ctx_r1.settingsForm.get(\"email\").valid);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.settings.newNamePrompt);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.settings.waitBeforeDeletion);\n  }\n}\nexport let AdminSettingsComponent = /*#__PURE__*/(() => {\n  class AdminSettingsComponent {\n    constructor(adminService, router, authService) {\n      this.adminService = adminService;\n      this.router = router;\n      this.authService = authService;\n      this.settings = null;\n      this.settingsUpdatedSub = null;\n    }\n    ngOnInit() {\n      this.settings = this.adminService.adminSettings;\n      debugger;\n      this.populateSettingsForm();\n      this.settingsUpdatedSub = this.adminService.settingsUpdated.subscribe(adminSettings => {\n        this.settings = adminSettings;\n        this.populateSettingsForm();\n      });\n    }\n    populateSettingsForm() {\n      this.settingsForm = new UntypedFormGroup({\n        'email': new UntypedFormControl(this.settings.email, [Validators.required, Validators.email]),\n        'prompt': new UntypedFormControl(this.settings.newNamePrompt),\n        'wait': new UntypedFormControl(this.settings.waitBeforeDeletion)\n      });\n    }\n    onSubmit() {\n      this.adminService.editSettings(this.settings);\n    }\n    onCancel() {\n      this.router.navigate(['admin/names']);\n    }\n    ngOnDestroy() {\n      if (this.settingsUpdatedSub) this.settingsUpdatedSub.unsubscribe();\n    }\n    static #_ = this.ɵfac = function AdminSettingsComponent_Factory(t) {\n      return new (t || AdminSettingsComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminSettingsComponent,\n      selectors: [[\"app-admin-settings\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[1, \"container\"], [\"style\", \"text-align: center\", 4, \"ngIf\"], [4, \"ngIf\"], [2, \"text-align\", \"center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"first-div\", \"row\"], [1, \"col-xs-6\", \"col-xs-offset-2\"], [\"type\", \"text\", \"placeholder\", \"Admin's email\", \"formControlName\", \"email\", 1, \"input-text\", \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-xs-2\"], [\"class\", \"help-block\", 4, \"ngIf\"], [1, \"form-group\", \"row\"], [1, \"col-xs-6\", \"col-xs-offset-2\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"prompt\", \"formControlName\", \"prompt\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-check-label\", \"text-center\"], [1, \"wait-label\"], [\"type\", \"number\", \"id\", \"wait\", \"formControlName\", \"wait\", 1, \"form-control\", \"input-number\", 3, \"ngModel\", \"ngModelChange\"], [1, \"row\"], [1, \"col-xs-6\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-lg\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-lg\", 3, \"click\"], [1, \"help-block\"]],\n      template: function AdminSettingsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, AdminSettingsComponent_div_1_Template, 2, 0, \"div\", 1);\n          i0.ɵɵtemplate(2, AdminSettingsComponent_div_2_Template, 26, 5, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.adminService.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.adminService.loading);\n        }\n      },\n      dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.LoadingSpinnerComponent],\n      styles: [\".input-number[_ngcontent-%COMP%]{width:70px;display:inline;margin:10px}.first-div[_ngcontent-%COMP%]{margin-top:10vh}.form-check-input[_ngcontent-%COMP%]{margin-right:10px}button[_ngcontent-%COMP%]{margin:10px}.wait-label[_ngcontent-%COMP%]{font-weight:300}.input-text[_ngcontent-%COMP%]{margin-left:10px;display:inline;width:inherit}\"]\n    });\n  }\n  return AdminSettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}