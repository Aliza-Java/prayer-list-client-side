{"ast":null,"code":"import { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Davenfor } from 'src/app/shared/models/davenfor.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/davening.service\";\nimport * as i2 from \"src/app/shared/services/http.service\";\nimport * as i3 from \"../../guest.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction GuestEditNameComponent_span_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \"English letters and spaces\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GuestEditNameComponent_span_10_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GuestEditNameComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtemplate(1, GuestEditNameComponent_span_10_span_1_Template, 2, 0, \"span\", 25);\n    i0.ɵɵtemplate(2, GuestEditNameComponent_span_10_span_2_Template, 2, 0, \"span\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nameForm.get(\"english\").errors[\"pattern\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nameForm.get(\"english\").errors[\"required\"]);\n  }\n}\nfunction GuestEditNameComponent_div_15_span_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \"English letters and spaces\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GuestEditNameComponent_div_15_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtemplate(1, GuestEditNameComponent_div_15_span_2_span_1_Template, 2, 0, \"span\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.nameForm.get(\"spouseEnglish\").errors[\"pattern\"]);\n  }\n}\nfunction GuestEditNameComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵtemplate(2, GuestEditNameComponent_div_15_span_2_Template, 2, 1, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 7)(4, \"label\", 27);\n    i0.ɵɵtext(5, \"Optional: Spouse name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 28);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.nameForm.get(\"spouseEnglish\").valid && ctx_r1.nameForm.get(\"spouseEnglish\").touched);\n  }\n}\nfunction GuestEditNameComponent_span_18_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \"Hebrew letters and spaces\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GuestEditNameComponent_span_18_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GuestEditNameComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtemplate(1, GuestEditNameComponent_span_18_span_1_Template, 2, 0, \"span\", 25);\n    i0.ɵɵtemplate(2, GuestEditNameComponent_span_18_span_2_Template, 2, 0, \"span\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.nameForm.get(\"hebrew\").errors[\"pattern\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.nameForm.get(\"hebrew\").errors[\"required\"]);\n  }\n}\nfunction GuestEditNameComponent_div_23_span_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \"Hebrew letters and spaces\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GuestEditNameComponent_div_23_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtemplate(1, GuestEditNameComponent_div_23_span_2_span_1_Template, 2, 0, \"span\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.nameForm.get(\"spouseHebrew\").errors[\"pattern\"]);\n  }\n}\nfunction GuestEditNameComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵtemplate(2, GuestEditNameComponent_div_23_span_2_Template, 2, 1, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 7)(4, \"label\", 29);\n    i0.ɵɵtext(5, \"Optional: \\u05E9\\u05DD \\u05D1\\u05DF \\u05D4\\u05D6\\u05D5\\u05D2 \\u05D1\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 30);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.nameForm.get(\"spouseHebrew\").valid && ctx_r3.nameForm.get(\"spouseHebrew\").touched);\n  }\n}\nfunction GuestEditNameComponent_option_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r13.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(2, 2, category_r13.english), \" \");\n  }\n}\nexport let GuestEditNameComponent = /*#__PURE__*/(() => {\n  class GuestEditNameComponent {\n    constructor(daveningService, httpService, guestService, router) {\n      this.daveningService = daveningService;\n      this.httpService = httpService;\n      this.guestService = guestService;\n      this.router = router;\n      this.updatedInfo = null;\n      this.spouseEnglishError = false;\n      this.spouseHebrewError = false;\n    }\n    ngOnInit() {\n      this.oldInfo = this.guestService.davenforToEdit;\n      this.populateFormControls();\n      this.setForm();\n      //Populating category array from Server\n      this.categories = this.guestService.categories;\n      this.banimNumber = this.guestService.findBanim().id;\n    }\n    populateFormControls() {\n      this.english = new UntypedFormControl(this.oldInfo.nameEnglish ? this.oldInfo.nameEnglish : null, [Validators.required, Validators.pattern(this.daveningService.englishNamePattern)]);\n      this.hebrew = new UntypedFormControl(this.oldInfo.nameHebrew ? this.oldInfo.nameHebrew : null, [Validators.required, Validators.pattern(this.daveningService.hebrewNamePattern)]);\n      //spouse values can be empty or not, depending on category value (if it is banim, and even then optional), as long as they are in the right language \n      //spouse values are initialized as empty string to assist with checkSpouseEnglish() and checkSpouseHebrew(), where we now only need to check if it is an empty string or not.\n      this.spouseEnglish = new UntypedFormControl(this.oldInfo.nameEnglishSpouse ? this.oldInfo.nameEnglishSpouse : null, [Validators.pattern(this.daveningService.englishNamePattern)]);\n      this.spouseHebrew = new UntypedFormControl(this.oldInfo.nameHebrewSpouse ? this.oldInfo.nameHebrewSpouse : null, [Validators.pattern(this.daveningService.hebrewNamePattern)]);\n      this.category = new UntypedFormControl(this.oldInfo.category.id, Validators.required); //default value is 'select category'\n      this.submitterToReceive = new UntypedFormControl(this.oldInfo.submitterToReceive);\n    }\n    setForm() {\n      this.nameForm = new UntypedFormGroup({\n        'english': this.english,\n        'hebrew': this.hebrew,\n        'spouseEnglish': this.spouseEnglish,\n        'spouseHebrew': this.spouseHebrew,\n        'category': this.category,\n        'submitterToReceive': this.submitterToReceive\n      });\n    }\n    onSubmit() {\n      /*If spouse name will be full and valid, will populate later.\r\n      Initializing before 'banim' condition so that recognized in 'formInfo' population below*/\n      let form = this.nameForm; //shortening references in this function\n      let updatedInfo = new Davenfor(this.oldInfo.id, null,\n      //guest email will be added in guestService\n      this.guestService.getCategory(form.get('category').value), form.get('hebrew').value, form.get('english').value, form.get('spouseHebrew').value, form.get('spouseEnglish').value, form.get('submitterToReceive').value, this.oldInfo.lastConfirmedAt, this.oldInfo.expireAt, this.oldInfo.createdAt, new Date().toISOString().split('T')[0]);\n      this.guestService.editDavenfor(updatedInfo);\n    }\n    cancel() {\n      this.guestService.davenforToEdit = null;\n      this.router.navigate(['guest/names']);\n    }\n    static #_ = this.ɵfac = function GuestEditNameComponent_Factory(t) {\n      return new (t || GuestEditNameComponent)(i0.ɵɵdirectiveInject(i1.DaveningService), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.GuestService), i0.ɵɵdirectiveInject(i4.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GuestEditNameComponent,\n      selectors: [[\"app-guest-edit-name\"]],\n      decls: 43,\n      vars: 7,\n      consts: [[1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"col-xs-6\", \"col-md-offset-2\"], [1, \"col-md-2\", \"col-md-offset-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-md\", 3, \"click\"], [1, \"col-xs-2\", \"help-block\"], [\"class\", \"help-block\", 4, \"ngIf\"], [1, \"col-xs-3\", \"input-box\"], [\"for\", \"english\"], [\"type\", \"text\", \"id\", \"english\", \"formControlName\", \"english\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"hebrew\"], [\"type\", \"text\", \"id\", \"hebrew\", \"formControlName\", \"hebrew\", 1, \"form-control\"], [1, \"col-xs-2\"], [1, \"col-xs-5\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"submitterToReceive\", \"formControlName\", \"submitterToReceive\", 1, \"form-check-input\", 2, \"margin\", \"5px\"], [\"for\", \"submitterToReceive\", 1, \"form-check-label\", \"text-center\"], [1, \"col-xs-1\"], [\"for\", \"category\"], [\"formControlName\", \"category\", \"id\", \"category\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-xs-12\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-lg\", 3, \"disabled\"], [1, \"help-block\"], [\"class\", \"text-right\", 4, \"ngIf\"], [1, \"text-right\"], [\"for\", \"spouseEnglish\"], [\"type\", \"text\", \"id\", \"spouseEnglish\", \"formControlName\", \"spouseEnglish\", 1, \"form-control\"], [\"for\", \"spouseHebrew\"], [\"type\", \"text\", \"id\", \"spouseHebrew\", \"formControlName\", \"spouseHebrew\", 1, \"form-control\"], [3, \"value\"]],\n      template: function GuestEditNameComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function GuestEditNameComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\");\n          i0.ɵɵtext(4, \"Fields marked with (*) are required.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function GuestEditNameComponent_Template_button_click_6_listener() {\n            return ctx.cancel();\n          });\n          i0.ɵɵtext(7, \"Cancel\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(8, \"div\", 1)(9, \"div\", 5);\n          i0.ɵɵtemplate(10, GuestEditNameComponent_span_10_Template, 3, 2, \"span\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n          i0.ɵɵtext(13, \"* Full Name \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(15, GuestEditNameComponent_div_15_Template, 7, 1, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 1)(17, \"div\", 5);\n          i0.ɵɵtemplate(18, GuestEditNameComponent_span_18_Template, 3, 2, \"span\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 7)(20, \"label\", 11);\n          i0.ɵɵtext(21, \"* \\u05E9\\u05DD \\u05D1\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(23, GuestEditNameComponent_div_23_Template, 7, 1, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"br\");\n          i0.ɵɵelementStart(25, \"div\", 1);\n          i0.ɵɵelement(26, \"div\", 13);\n          i0.ɵɵelementStart(27, \"div\", 14);\n          i0.ɵɵelement(28, \"input\", 15);\n          i0.ɵɵelementStart(29, \"label\", 16);\n          i0.ɵɵtext(30, \"Include this name (when appropriate) in my davening list\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"div\", 17)(32, \"label\", 18);\n          i0.ɵɵtext(33, \"* Category:\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(34, \"div\", 13)(35, \"select\", 19)(36, \"option\", 20);\n          i0.ɵɵtext(37, \"* Select category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(38, GuestEditNameComponent_option_38_Template, 3, 4, \"option\", 21);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(39, \"div\", 1)(40, \"div\", 22)(41, \"button\", 23);\n          i0.ɵɵtext(42, \"Edit Name\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.nameForm);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngIf\", !ctx.nameForm.get(\"english\").valid && ctx.nameForm.get(\"english\").touched);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.nameForm.get(\"category\").value == ctx.banimNumber);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", !ctx.nameForm.get(\"hebrew\").valid && ctx.nameForm.get(\"hebrew\").touched);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.nameForm.get(\"category\").value == ctx.banimNumber);\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.nameForm.invalid);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.CheckboxControlValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i5.TitleCasePipe],\n      styles: [\".form-horizontal[_ngcontent-%COMP%]{margin:3em}.help-block[_ngcontent-%COMP%], .alert-option[_ngcontent-%COMP%]{color:red;margin-bottom:0}.text-right[_ngcontent-%COMP%]{float:right}select[_ngcontent-%COMP%]{text-align-last:center}.input-box[_ngcontent-%COMP%]{width:300px}.form-control[_ngcontent-%COMP%]{font-weight:500}\"]\n    });\n  }\n  return GuestEditNameComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}